import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.util.Objects;

public class VotingSystem extends javax.swing.JFrame {

    Connection con;
    ResultSet rs1,rs2,rs3,rs4,rs5,rs6;
    PreparedStatement pst1,pst2,pst3,pst4,pst5,pst6;

    /**
     * Creates new form voting
     */
    public VotingSystem() {
        initComponents();
        forms();
    }

    public VotingSystem(String passId) {
        initComponents();
        idReceive.setText(passId);
        forms();
    }

    public Connection getConnection(){
        try{                                                                        //username //database         =pass no password
            con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;Database=voting_system;integratedSecurity=false;encrypt=false;", "admin", "admin");
            return con;
        }
        catch(Exception e){
            e.printStackTrace();
        }
        return null;
    }


    public void forms() {

        try {

            Connection con = getConnection();

            String president = "SELECT candidate_name FROM candidate WHERE position_id = 1";
            pst1 = con.prepareStatement(president);
            rs1 = pst1.executeQuery();

            String vicePresident= "SELECT candidate_name FROM candidate WHERE position_id = 2";
            pst2 = con.prepareStatement(vicePresident);
            rs2 = pst2.executeQuery();

            String secretary = "SELECT candidate_name from candidate where position_id = 3";
            pst3 = con.prepareStatement(secretary);
            rs3 = pst3.executeQuery();

            String treasurer = "SELECT candidate_name FROM candidate WHERE position_id = 5";
            pst4 = con.prepareStatement(treasurer);
            rs4 = pst4.executeQuery();

            String auditor = "SELECT candidate_name FROM candidate WHERE position_id = 4";
            pst5 = con.prepareStatement(auditor);
            rs5 = pst5.executeQuery();

            String pio = "SELECT candidate_name FROM candidate WHERE position_id = 6";
            pst6 = con.prepareStatement(pio);
            rs6 = pst6.executeQuery();

            while (rs1.next() && rs2.next() && rs3.next() && rs4.next() && rs5.next() && rs6.next() ){
                presidentCB.addItem(rs1.getString(1));
                vicePresidentCB.addItem(rs2.getString(1));
                secretaryCB.addItem(rs3.getString(1));
                treasurerCB.addItem(rs4.getString(1));
                auditorCB.addItem(rs5.getString(1));
                pioCB.addItem(rs6.getString(1));
            }
        }

        catch(Exception e){
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {

        setSize(800,700);
        setLocationRelativeTo(null);

        // Variables declaration - do not modify//GEN-BEGIN:variables
        ButtonGroup presidentGroup = new ButtonGroup();
        ButtonGroup vicePresidentGroup = new ButtonGroup();
        JLabel jLabel1 = new JLabel();
        JLabel jLabel2 = new JLabel();
        JLabel jLabel3 = new JLabel();
        JLabel jLabel4 = new JLabel();
        JLabel jLabel5 = new JLabel();
        JLabel jLabel6 = new JLabel();
        JLabel jLabel7 = new JLabel();
        JButton jButton1 = new JButton();
        idReceive = new javax.swing.JTextField();
        presidentCB = new javax.swing.JComboBox<>();
        vicePresidentCB = new javax.swing.JComboBox<>();
        secretaryCB = new javax.swing.JComboBox<>();
        treasurerCB = new javax.swing.JComboBox<>();
        auditorCB = new javax.swing.JComboBox<>();
        pioCB = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new SpringLayout());

        jLabel1.setFont(new java.awt.Font("Courier New", Font.BOLD, 24)); // NOI18N
        jLabel1.setText("Secretary");
        getContentPane().add(jLabel1, new SpringLayout.Constraints(Spring.constant(70), Spring.constant(210), Spring.constant(-1), Spring.constant(-1)));

        jButton1.setText("Vote now");
        jButton1.addActionListener(this::jButton2ActionPerformed);
        getContentPane().add(jButton1, new SpringLayout.Constraints(Spring.constant(210), Spring.constant(460), Spring.constant(110), Spring.constant(60)));
        getContentPane().add(idReceive, new SpringLayout.Constraints(Spring.constant(358), Spring.constant(27), Spring.constant(190), Spring.constant(-1)));

        jLabel2.setFont(new java.awt.Font("Courier New", Font.BOLD, 18)); // NOI18N
        jLabel2.setText("STUDENT ID NUMBER");
        getContentPane().add(jLabel2, new SpringLayout.Constraints(Spring.constant(150), Spring.constant(20), Spring.constant(-1), Spring.constant(29)));

        treasurerCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT" }));
        getContentPane().add(treasurerCB, new SpringLayout.Constraints(Spring.constant(210), Spring.constant(250), Spring.constant(185), Spring.constant(35)));

        //presidentCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT" }));
        presidentCB.addActionListener(this::presidentCBActionPerformed);
        //getContentPane().add(presidentCB, new SpringLayout.Constraints(Spring.constant(210), Spring.constant(70), Spring.constant(185), Spring.constant(35)));

        jLabel3.setFont(new java.awt.Font("Courier New", Font.BOLD, 24)); // NOI18N
        jLabel3.setText("Treasurer");
        getContentPane().add(jLabel3, new SpringLayout.Constraints(Spring.constant(70), Spring.constant(260), Spring.constant(-1), Spring.constant(-1)));

        jLabel4.setFont(new java.awt.Font("Courier New", Font.BOLD, 24)); // NOI18N
        jLabel4.setText("Vice PRESIDENT");
        getContentPane().add(jLabel4, new SpringLayout.Constraints(Spring.constant(0), Spring.constant(150), Spring.constant(-1), Spring.constant(-1)));

        //vicePresidentCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT" }));
        //getContentPane().add(vicePresidentCB, new SpringLayout.Constraints(Spring.constant(210), Spring.constant(140), Spring.constant(185), Spring.constant(35)));

        //secretaryCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT" }));
        //getContentPane().add(secretaryCB, new SpringLayout.Constraints(Spring.constant(210), Spring.constant(200), Spring.constant(185), Spring.constant(35)));

        jLabel5.setFont(new java.awt.Font("Courier New", Font.BOLD, 24)); // NOI18N
        jLabel5.setText("Auditor");
        getContentPane().add(jLabel5, new SpringLayout.Constraints(Spring.constant(400), Spring.constant(320), Spring.constant(-1), Spring.constant(-1)));

        //auditorCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT" }));
        //getContentPane().add(auditorCB, new SpringLayout.Constraints(Spring.constant(210), Spring.constant(310), Spring.constant(185), Spring.constant(35)));

        jLabel6.setFont(new java.awt.Font("Courier New", Font.BOLD, 24)); // NOI18N
        jLabel6.setText("PRESIDENT");
        getContentPane().add(jLabel6, new SpringLayout.Constraints(Spring.constant(60), Spring.constant(70), Spring.constant(-1), Spring.constant(-1)));

        //pioCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT" }));
        //getContentPane().add(pioCB, new SpringLayout.Constraints(Spring.constant(210), Spring.constant(370), Spring.constant(185), Spring.constant(35)));

        jLabel7.setFont(new java.awt.Font("Courier New", Font.BOLD, 24)); // NOI18N
        jLabel7.setText("P.I.O");
        getContentPane().add(jLabel7, new SpringLayout.Constraints(Spring.constant(130), Spring.constant(370), Spring.constant(-1), Spring.constant(-1)));

//        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        String prs = Objects.requireNonNull(presidentCB.getSelectedItem()).toString();
        String updatePres = "UPDATE candidate SET points = points + 1 WHERE candidate_name ='"+prs+"' ";
        if (presidentCB.getSelectedItem().toString().equals(prs)){

            try {
                Connection con = getConnection();
                Statement state;
                state =con.prepareStatement(updatePres);
                state.execute(updatePres);
            }

            catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Voted wrong!");
            }
        }

        String vrs = Objects.requireNonNull(vicePresidentCB.getSelectedItem()).toString();
        String updateVice = "UPDATE candidate SET points = points + 1 WHERE candidate_name ='"+vrs+"' ";

        if (vicePresidentCB.getSelectedItem()==vrs){
            try{
                Connection con = getConnection();
                Statement state;
                state =con.prepareStatement(updateVice);
                state.execute(updateVice);
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Voted wrong!");
            }
        }

        String ids=idReceive.getText();
        String updateId="Yes";
        String voters ="UPDATE account SET status = '"+updateId+"' WHERE id_number ='"+ids+"' ";

        try {
            Connection con = getConnection();
            Statement stateId;
            stateId =con.prepareStatement(voters);
            stateId.execute(voters);
        }
        catch(Exception e){
            e.printStackTrace();
        }

        String sec = Objects.requireNonNull(secretaryCB.getSelectedItem()).toString();
        String updateSec = "UPDATE candidate SET points = points + 1 WHERE candidate_name ='"+sec+"' ";
        if (secretaryCB.getSelectedItem()==sec){
            try{
                Connection con = getConnection();
                Statement state;
                state =con.prepareStatement(updateSec);
                state.execute(updateSec);
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Voted wrong!");
            }
        }

        String tres = Objects.requireNonNull(treasurerCB.getSelectedItem()).toString();
        String updateTres = "UPDATE candidate SET points = points + 1 WHERE candidate_name ='"+tres+"' ";
        if (treasurerCB.getSelectedItem()==tres){

            try{
                Connection con = getConnection();
                Statement state;
                state =con.prepareStatement(updateTres);
                state.execute(updateTres);
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Voted wrong!");
            }
        }

        String aud = Objects.requireNonNull(auditorCB.getSelectedItem()).toString();
        String updateAud = "UPDATE candidate SET points = points + 1 WHERE candidate_name ='"+aud+"' ";
        if (auditorCB.getSelectedItem()==aud){
            try{
                Connection con = getConnection();
                Statement state;
                state =con.prepareStatement(updateAud);
                state.execute(updateAud);
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Voted wrong!");
            }
        }

        String pio = Objects.requireNonNull(pioCB.getSelectedItem()).toString();
        String updatePio = "UPDATE candidate SET points = points + 1 WHERE candidate_name ='"+pio+"' ";
        if (pioCB.getSelectedItem()==pio){
            try{
                Connection con = getConnection();
                Statement state;
                state =con.prepareStatement(updatePio);
                state.execute(updatePio);
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,"Voted wrong!");
            }
        }

        String id = idReceive.getText();
        Connection con = getConnection();
        try{
            String status="yes";
            String search ="select student_name from account where id_number='"+id+"'";
            String updateStatus ="UPDATE account set status='"+status+"'   where id_number='"+id+"'  ";
            Statement searchStudent = con.createStatement();
            searchStudent.executeQuery(search);
            Statement studentUpdate = con.createStatement();
            studentUpdate.executeUpdate(updateStatus);
            JOptionPane.showMessageDialog(null,"Thank you!");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Voted wrong!");
        }
        JOptionPane.showMessageDialog(null,"Thank you for your vote!");
    }//GEN-LAST:event_jButton2ActionPerformed


    private void presidentCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presidentCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_presidentCBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException |
                 UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VotingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new VotingSystem().setVisible(true));
    }

    private javax.swing.JComboBox<String> auditorCB;
    private javax.swing.JTextField idReceive;
    private javax.swing.JComboBox<String> pioCB;
    private javax.swing.JComboBox<String> presidentCB;
    private javax.swing.JComboBox<String> secretaryCB;
    private javax.swing.JComboBox<String> treasurerCB;
    private javax.swing.JComboBox<String> vicePresidentCB;
    // End of variables declaration//GEN-END:variables
}
