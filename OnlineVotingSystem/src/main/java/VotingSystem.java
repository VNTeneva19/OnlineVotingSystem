import javax.swing.*;
import java.awt.*;
import java.sql.*;
import java.util.Objects;

public class VotingSystem extends javax.swing.JFrame {

    Connection con;
    ResultSet rs1,rs2,rs3,rs4,rs5,rs6;
    PreparedStatement pst1,pst2,pst3,pst4,pst5,pst6;

    /**
     * Creates new form VotingSystem
     */
    public VotingSystem() {
        initComponents();
        forms();
    }

    public VotingSystem(String passId) {
        initComponents();
        idReceive.setText(passId);
        forms();
    }

    public Connection getConnection(){
        try{                                                                        //username //database         =pass no password
            con = DriverManager.getConnection("jdbc:sqlserver://SL152\\SQLEXPRESS;Database=voting_system;integratedSecurity=false;encrypt=false;", "admin", "admin12345");
            return con;
        }
        catch(Exception e){
            e.printStackTrace();
        }
        return null;
    }


    public void forms() {

        try {

            Connection con = getConnection();

            String president = "SELECT candidate_name FROM candidate WHERE position_id = 1";
            pst1 = con.prepareStatement(president);
            rs1 = pst1.executeQuery();

            String vicePresident= "SELECT candidate_name FROM candidate WHERE position_id = 2";
            pst2 = con.prepareStatement(vicePresident);
            rs2 = pst2.executeQuery();

            String secretary = "SELECT candidate_name from candidate where position_id = 3";
            pst3 = con.prepareStatement(secretary);
            rs3 = pst3.executeQuery();

            String treasurer = "SELECT candidate_name FROM candidate WHERE position_id = 5";
            pst4 = con.prepareStatement(treasurer);
            rs4 = pst4.executeQuery();

            String auditor = "SELECT candidate_name FROM candidate WHERE position_id = 4";
            pst5 = con.prepareStatement(auditor);
            rs5 = pst5.executeQuery();

            String pio = "SELECT candidate_name FROM candidate WHERE position_id = 6";
            pst6 = con.prepareStatement(pio);
            rs6 = pst6.executeQuery();

            while (rs1.next() && rs2.next() && rs3.next() && rs4.next() && rs5.next() && rs6.next() ){
                presidentCB.addItem(rs1.getString(1));
                vicePresidentCB.addItem(rs2.getString(1));
                secretaryCB.addItem(rs3.getString(1));
                treasurerCB.addItem(rs4.getString(1));
                auditorCB.addItem(rs5.getString(1));
                pioCB.addItem(rs6.getString(1));
            }
        }

        catch(Exception e){
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {

        setSize(600,700);
        setLocationRelativeTo(null);

        // Variables declaration - do not modify//GEN-BEGIN:variables
        ButtonGroup presidentGroup = new ButtonGroup();
        ButtonGroup vicePresidentGroup = new ButtonGroup();
        JLabel jLabel1 = new JLabel();
        JLabel jLabel2 = new JLabel();
        JLabel jLabel3 = new JLabel();
        JLabel jLabel4 = new JLabel();
        JLabel jLabel5 = new JLabel();
        JLabel jLabel6 = new JLabel();
        JLabel jLabel7 = new JLabel();
        JLabel jLabel = new JLabel();
        JButton jButton1 = new JButton();
        JButton jButton2 = new JButton();
        JButton jButton3 = new JButton();
        JButton jButton4 = new JButton();
        JButton jButton5 = new JButton();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuBar1 = new javax.swing.JMenuBar();
        idReceive = new javax.swing.JLabel();
        presidentCB = new javax.swing.JComboBox<>();
        vicePresidentCB = new javax.swing.JComboBox<>();
        secretaryCB = new javax.swing.JComboBox<>();
        treasurerCB = new javax.swing.JComboBox<>();
        auditorCB = new javax.swing.JComboBox<>();
        pioCB = new javax.swing.JComboBox<>();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new SpringLayout());

        jLabel.setFont(new java.awt.Font("Courier New", Font.BOLD, 26));
        jLabel.setText("VOTING SYSTEM");
        getContentPane().add(jLabel, new SpringLayout.Constraints(Spring.constant(200), Spring.constant(-90), Spring.constant(300), Spring.constant(300)));
        jLabel2.setFont(new java.awt.Font("Courier New", Font.PLAIN, 18)); // NOI18N
        jLabel2.setText("You're logged in as: ");
        getContentPane().add(jLabel2, new SpringLayout.Constraints(Spring.constant(150), Spring.constant(-60), Spring.constant(300), Spring.constant(300)));
        idReceive.setFont(new java.awt.Font("Courier New", Font.PLAIN, 18));
        getContentPane().add(idReceive, new SpringLayout.Constraints(Spring.constant(380), Spring.constant(-5), Spring.constant(190), Spring.constant(190)));

        jLabel6.setFont(new java.awt.Font("Courier New", Font.BOLD, 24)); // NOI18N
        jLabel6.setText("President");
        getContentPane().add(jLabel6, new SpringLayout.Constraints(Spring.constant(240), Spring.constant(-30), Spring.constant(300), Spring.constant(300)));
        presidentCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select President" }));
        getContentPane().add(presidentCB, new SpringLayout.Constraints(Spring.constant(150), Spring.constant(130), Spring.constant(185), Spring.constant(35)));
        jButton1.setText("Vote now");
        jButton1.addActionListener(this::presidentButtonActionPerformed);
        getContentPane().add(jButton1, new SpringLayout.Constraints(Spring.constant(350), Spring.constant(130), Spring.constant(110), Spring.constant(35)));

        jLabel4.setFont(new java.awt.Font("Courier New", Font.BOLD, 24)); // NOI18N
        jLabel4.setText("Vice President");
        getContentPane().add(jLabel4, new SpringLayout.Constraints(Spring.constant(200), Spring.constant(40), Spring.constant(300), Spring.constant(300)));
        vicePresidentCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Vice President" }));
        getContentPane().add(vicePresidentCB, new SpringLayout.Constraints(Spring.constant(150), Spring.constant(200), Spring.constant(185), Spring.constant(35)));
        jButton2.setText("Vote now");
        jButton2.addActionListener(this::vicePresidentButtonActionPerformed);
        getContentPane().add(jButton2, new SpringLayout.Constraints(Spring.constant(350), Spring.constant(200), Spring.constant(110), Spring.constant(35)));

        jLabel1.setFont(new java.awt.Font("Courier New", Font.BOLD, 24)); // NOI18N
        jLabel1.setText("Secretary");
        getContentPane().add(jLabel1, new SpringLayout.Constraints(Spring.constant(240), Spring.constant(110), Spring.constant(300), Spring.constant(300)));
        secretaryCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Secretary" }));
        getContentPane().add(secretaryCB, new SpringLayout.Constraints(Spring.constant(150), Spring.constant(270), Spring.constant(185), Spring.constant(35)));
        jButton3.setText("Vote now");
        jButton3.addActionListener(this::secretaryButtonActionPerformed);
        getContentPane().add(jButton3, new SpringLayout.Constraints(Spring.constant(350), Spring.constant(270), Spring.constant(110), Spring.constant(35)));

        jLabel3.setFont(new java.awt.Font("Courier New", Font.BOLD, 24)); // NOI18N
        jLabel3.setText("Treasurer");
        getContentPane().add(jLabel3, new SpringLayout.Constraints(Spring.constant(240), Spring.constant(180), Spring.constant(300), Spring.constant(300)));
        treasurerCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Treasurer" }));
        getContentPane().add(treasurerCB, new SpringLayout.Constraints(Spring.constant(150), Spring.constant(340), Spring.constant(185), Spring.constant(35)));
        jButton4.setText("Vote now");
        jButton4.addActionListener(this::treasurerButtonActionPerformed);
        getContentPane().add(jButton4, new SpringLayout.Constraints(Spring.constant(350), Spring.constant(340), Spring.constant(110), Spring.constant(35)));

        jLabel5.setFont(new java.awt.Font("Courier New", Font.BOLD, 24)); // NOI18N
        jLabel5.setText("Auditor");
        getContentPane().add(jLabel5, new SpringLayout.Constraints(Spring.constant(250), Spring.constant(300), Spring.constant(200), Spring.constant(200)));
        auditorCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Auditor" }));
        getContentPane().add(auditorCB, new SpringLayout.Constraints(Spring.constant(150), Spring.constant(410), Spring.constant(185), Spring.constant(35)));
        jButton5.setText("Vote now");
        jButton5.addActionListener(this::auditorButtonActionPerformed);
        getContentPane().add(jButton5, new SpringLayout.Constraints(Spring.constant(350), Spring.constant(410), Spring.constant(110), Spring.constant(35)));

        jMenu1.setText("Account");

        jMenu3.setText("Logout");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenu1.add(jMenu3);

        jMenuBar1.add(jMenu1);
        setJMenuBar(jMenuBar1);
//        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Button 1 - President
    private void presidentButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String prs = Objects.requireNonNull(presidentCB.getSelectedItem()).toString();
        String updatePres = "UPDATE candidate SET points = points + 1 WHERE candidate_name = ?";

        if (presidentCB.getSelectedItem().toString().equals(prs)) {
            try {
                Connection con = getConnection();
                PreparedStatement state = con.prepareStatement(updatePres);
                state.setString(1, prs); // Set the parameter value

                int rowsUpdated = state.executeUpdate();
                if (rowsUpdated > 0) {
                    // Update successful
                    JOptionPane.showMessageDialog(null, "Vote counted for president: " + prs);
                } else {
                    // No rows affected
                    JOptionPane.showMessageDialog(null, "No rows updated");
                }
            } catch (Exception e) {
                e.printStackTrace();
                // JOptionPane.showMessageDialog(null, "Voted wrong!");
            }
        }
        updateVoterStatus();
    }

    // Button 2 - Vice President
    private void vicePresidentButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String prs = Objects.requireNonNull(vicePresidentCB.getSelectedItem()).toString();
        String updatePres = "UPDATE candidate SET points = points + 1 WHERE candidate_name = ?";

        if (vicePresidentCB.getSelectedItem().toString().equals(prs)) {
            try {
                Connection con = getConnection();
                PreparedStatement state = con.prepareStatement(updatePres);
                state.setString(1, prs); // Set the parameter value

                int rowsUpdated = state.executeUpdate();
                if (rowsUpdated > 0) {
                    // Update successful
                    JOptionPane.showMessageDialog(null, "Vote counted for vice president: " + prs);
                } else {
                    // No rows affected
                    JOptionPane.showMessageDialog(null, "No rows updated");
                }
            } catch (Exception e) {
                e.printStackTrace();
                // JOptionPane.showMessageDialog(null, "Voted wrong!");
            }
        }
        updateVoterStatus();
    }

    // Button 3 - Secretary
    private void secretaryButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String prs = Objects.requireNonNull(secretaryCB.getSelectedItem()).toString();
        String updatePres = "UPDATE candidate SET points = points + 1 WHERE candidate_name = ?";

        if (secretaryCB.getSelectedItem().toString().equals(prs)) {
            try {
                Connection con = getConnection();
                PreparedStatement state = con.prepareStatement(updatePres);
                state.setString(1, prs); // Set the parameter value

                int rowsUpdated = state.executeUpdate();
                if (rowsUpdated > 0) {
                    // Update successful
                    JOptionPane.showMessageDialog(null, "Vote counted for secretary: " + prs);
                } else {
                    // No rows affected
                    JOptionPane.showMessageDialog(null, "No rows updated");
                }
            } catch (Exception e) {
                e.printStackTrace();
                // JOptionPane.showMessageDialog(null, "Voted wrong!");
            }
        }
        updateVoterStatus();
    }

    // Button 4 - Treasurer
    private void treasurerButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String prs = Objects.requireNonNull(treasurerCB.getSelectedItem()).toString();
        String updatePres = "UPDATE candidate SET points = points + 1 WHERE candidate_name = ?";

        if (treasurerCB.getSelectedItem().toString().equals(prs)) {
            try {
                Connection con = getConnection();
                PreparedStatement state = con.prepareStatement(updatePres);
                state.setString(1, prs); // Set the parameter value

                int rowsUpdated = state.executeUpdate();
                if (rowsUpdated > 0) {
                    // Update successful
                    JOptionPane.showMessageDialog(null, "Vote counted for treasurer: " + prs);
                } else {
                    // No rows affected
                    JOptionPane.showMessageDialog(null, "No rows updated");
                }
            } catch (Exception e) {
                e.printStackTrace();
                // JOptionPane.showMessageDialog(null, "Voted wrong!");
            }
        }
        updateVoterStatus();
    }

    // Button 5 - Auditor
    private void auditorButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String prs = Objects.requireNonNull(auditorCB.getSelectedItem()).toString();
        String updatePres = "UPDATE candidate SET points = points + 1 WHERE candidate_name = ?";

        if (auditorCB.getSelectedItem().toString().equals(prs)) {
            try {
                Connection con = getConnection();
                PreparedStatement state = con.prepareStatement(updatePres);
                state.setString(1, prs); // Set the parameter value

                int rowsUpdated = state.executeUpdate();
                if (rowsUpdated > 0) {
                    // Update successful
                    JOptionPane.showMessageDialog(null, "Vote counted for auditor: " + prs);
                } else {
                    // No rows affected
                    JOptionPane.showMessageDialog(null, "No rows updated");
                }
            } catch (Exception e) {
                e.printStackTrace();
                // JOptionPane.showMessageDialog(null, "Voted wrong!");
            }
        }
        updateVoterStatus();
    }


    private void updateVoterStatus() {
        String id = idReceive.getText();
        Connection con = getConnection();
        try {
            String status = "yes";
            String updateStatus = "UPDATE account SET status = '" + status + "' WHERE id_number = '" + id + "'";
            Statement studentUpdate = con.createStatement();
            studentUpdate.executeUpdate(updateStatus);
            JOptionPane.showMessageDialog(null, "Thank you for your vote!");
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, "Voted wrong!");
        }
    }

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        setVisible(false);
        MainMenu main = new MainMenu();
        main.setVisible(true);

    }//GEN-LAST:event_jMenu3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException |
                 UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VotingSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new VotingSystem().setVisible(true));
    }

    private javax.swing.JComboBox<String> auditorCB;
    private javax.swing.JLabel idReceive;
    private javax.swing.JComboBox<String> pioCB;
    private javax.swing.JComboBox<String> presidentCB;
    private javax.swing.JComboBox<String> secretaryCB;
    private javax.swing.JComboBox<String> treasurerCB;
    private javax.swing.JComboBox<String> vicePresidentCB;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}